// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestCoreApi.Data;

#nullable disable

namespace TestCoreApi.Migrations
{
    [DbContext(typeof(StudentsAPIDbContext))]
    [Migration("20240322113039_AddSubjectEntityEntries")]
    partial class AddSubjectEntityEntries
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestCoreApi.Models.AdminTeacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("JoinDate")
                        .HasColumnType("date");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StandardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StandardId");

                    b.HasIndex("SubjectId");

                    b.ToTable("AdminTeachers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f66bdc0-e70f-4153-b806-5c4a344e0b47"),
                            Address = "Krishna House",
                            BirthDate = new DateOnly(2002, 1, 2),
                            City = "Rajkot",
                            District = "Rajkot",
                            Email = "admin@gmail.com",
                            Gender = "Female",
                            IsAdmin = true,
                            JoinDate = new DateOnly(2024, 2, 2),
                            MobileNumber = "9876543210",
                            Name = "admin",
                            Password = "Admin@123",
                            PinCode = "360001",
                            State = "Gujarat"
                        });
                });

            modelBuilder.Entity("TestCoreApi.Models.Family", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("TestCoreApi.Models.Fees", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Fees");
                });

            modelBuilder.Entity("TestCoreApi.Models.FeesMaster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<int>("StandardNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FeesMasters");
                });

            modelBuilder.Entity("TestCoreApi.Models.Standard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandardNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Standards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a8283465-6ae7-43d6-8eca-09c02ab12b4c"),
                            Section = "A",
                            StandardNumber = 8
                        },
                        new
                        {
                            Id = new Guid("f82ba9d1-5d85-4c20-bca0-142dd07e1316"),
                            Section = "B",
                            StandardNumber = 8
                        },
                        new
                        {
                            Id = new Guid("49716b8a-aca6-4ce9-9a74-199ce2a5af40"),
                            Section = "A",
                            StandardNumber = 9
                        },
                        new
                        {
                            Id = new Guid("3241a142-031d-41e4-a1ba-239efc8559f7"),
                            Section = "B",
                            StandardNumber = 9
                        },
                        new
                        {
                            Id = new Guid("1ecc5761-7ddb-4ef7-8b16-28c91845a386"),
                            Section = "A",
                            StandardNumber = 10
                        },
                        new
                        {
                            Id = new Guid("b880223f-458f-4e5f-a012-313119be3724"),
                            Section = "B",
                            StandardNumber = 10
                        });
                });

            modelBuilder.Entity("TestCoreApi.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("JoinDate")
                        .HasColumnType("date");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RollNo")
                        .HasColumnType("int");

                    b.Property<Guid>("StandardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StandardId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("TestCoreApi.Models.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StandardId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StandardId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ef966dd1-8455-430c-9a7d-134b564f29ab"),
                            Name = "English",
                            StandardId = new Guid("a8283465-6ae7-43d6-8eca-09c02ab12b4c")
                        },
                        new
                        {
                            Id = new Guid("8c2c6493-7967-450c-aa4b-1e1b08470dca"),
                            Name = "Gujrati",
                            StandardId = new Guid("a8283465-6ae7-43d6-8eca-09c02ab12b4c")
                        },
                        new
                        {
                            Id = new Guid("9e3aca2b-d4eb-43a7-8b97-2530a8cb029d"),
                            Name = "Maths",
                            StandardId = new Guid("a8283465-6ae7-43d6-8eca-09c02ab12b4c")
                        },
                        new
                        {
                            Id = new Guid("7c16a113-f763-4924-b53d-2dd61658fc3e"),
                            Name = "Science",
                            StandardId = new Guid("a8283465-6ae7-43d6-8eca-09c02ab12b4c")
                        },
                        new
                        {
                            Id = new Guid("64d5193e-2c83-4074-88ba-4e6dae087e34"),
                            Name = "Social Science",
                            StandardId = new Guid("a8283465-6ae7-43d6-8eca-09c02ab12b4c")
                        },
                        new
                        {
                            Id = new Guid("32f85ec7-69ad-4a09-9975-5e38d213aa45"),
                            Name = "Hindi",
                            StandardId = new Guid("a8283465-6ae7-43d6-8eca-09c02ab12b4c")
                        },
                        new
                        {
                            Id = new Guid("a2b2a0f2-a8c5-4d5b-b805-71a2555804d2"),
                            Name = "Computer",
                            StandardId = new Guid("a8283465-6ae7-43d6-8eca-09c02ab12b4c")
                        },
                        new
                        {
                            Id = new Guid("4a543c11-2528-47d9-b6b9-87d6715662f8"),
                            Name = "English",
                            StandardId = new Guid("f82ba9d1-5d85-4c20-bca0-142dd07e1316")
                        },
                        new
                        {
                            Id = new Guid("08965a20-5133-4973-8abe-880ee4c9d459"),
                            Name = "Gujrati",
                            StandardId = new Guid("f82ba9d1-5d85-4c20-bca0-142dd07e1316")
                        },
                        new
                        {
                            Id = new Guid("15565504-cc67-4a0c-95dc-9ba7487f5da7"),
                            Name = "Maths",
                            StandardId = new Guid("f82ba9d1-5d85-4c20-bca0-142dd07e1316")
                        },
                        new
                        {
                            Id = new Guid("81dd90f9-ca23-4cb6-b033-a719e162acbd"),
                            Name = "Science",
                            StandardId = new Guid("f82ba9d1-5d85-4c20-bca0-142dd07e1316")
                        },
                        new
                        {
                            Id = new Guid("6e5eaf49-2569-47c0-93b3-c6f2710f496d"),
                            Name = "Social Science",
                            StandardId = new Guid("f82ba9d1-5d85-4c20-bca0-142dd07e1316")
                        },
                        new
                        {
                            Id = new Guid("0c1b106e-5cee-4669-b8fc-fe82fa8d8af8"),
                            Name = "Computer",
                            StandardId = new Guid("f82ba9d1-5d85-4c20-bca0-142dd07e1316")
                        },
                        new
                        {
                            Id = new Guid("34baa2cc-27ae-450a-a68a-879b93a4a19b"),
                            Name = "Sanskrit",
                            StandardId = new Guid("f82ba9d1-5d85-4c20-bca0-142dd07e1316")
                        },
                        new
                        {
                            Id = new Guid("a66ecdba-36c5-4501-9737-0d40cdaa264e"),
                            Name = "English",
                            StandardId = new Guid("49716b8a-aca6-4ce9-9a74-199ce2a5af40")
                        },
                        new
                        {
                            Id = new Guid("0416e0ea-3c21-4ec8-95d4-3fb5750409c8"),
                            Name = "Gujrati",
                            StandardId = new Guid("49716b8a-aca6-4ce9-9a74-199ce2a5af40")
                        },
                        new
                        {
                            Id = new Guid("2a3d67ca-41a5-4878-8163-5a55f82242ce"),
                            Name = "Maths",
                            StandardId = new Guid("49716b8a-aca6-4ce9-9a74-199ce2a5af40")
                        },
                        new
                        {
                            Id = new Guid("48e34651-25a6-4990-a4a6-bef546abc646"),
                            Name = "Science",
                            StandardId = new Guid("49716b8a-aca6-4ce9-9a74-199ce2a5af40")
                        },
                        new
                        {
                            Id = new Guid("c2f93ee2-e912-4b03-8336-7ca346bcc83b"),
                            Name = "Social Science",
                            StandardId = new Guid("49716b8a-aca6-4ce9-9a74-199ce2a5af40")
                        },
                        new
                        {
                            Id = new Guid("8f66bdc0-e70f-4153-b806-5c4a344e0b47"),
                            Name = "Hindi",
                            StandardId = new Guid("49716b8a-aca6-4ce9-9a74-199ce2a5af40")
                        },
                        new
                        {
                            Id = new Guid("25418d7c-0bc0-44fa-af90-716bbfda4fd3"),
                            Name = "Computer",
                            StandardId = new Guid("49716b8a-aca6-4ce9-9a74-199ce2a5af40")
                        },
                        new
                        {
                            Id = new Guid("8ede72b7-0489-4767-8527-87da60a15ae2"),
                            Name = "English",
                            StandardId = new Guid("3241a142-031d-41e4-a1ba-239efc8559f7")
                        },
                        new
                        {
                            Id = new Guid("932978e9-6ebe-46f0-8440-bbc08d4419f4"),
                            Name = "Gujrati",
                            StandardId = new Guid("3241a142-031d-41e4-a1ba-239efc8559f7")
                        },
                        new
                        {
                            Id = new Guid("5a41defe-5db1-40bc-985a-94e5e6fb716a"),
                            Name = "Maths",
                            StandardId = new Guid("3241a142-031d-41e4-a1ba-239efc8559f7")
                        },
                        new
                        {
                            Id = new Guid("032082cd-95aa-4827-9fa7-9f6b5f6e27fe"),
                            Name = "Science",
                            StandardId = new Guid("3241a142-031d-41e4-a1ba-239efc8559f7")
                        },
                        new
                        {
                            Id = new Guid("20be64c7-ec87-4f8f-9589-b01d648872aa"),
                            Name = "Social Science",
                            StandardId = new Guid("3241a142-031d-41e4-a1ba-239efc8559f7")
                        },
                        new
                        {
                            Id = new Guid("4c3b9f1e-c539-472d-b84f-fd99b7fbba19"),
                            Name = "Computer",
                            StandardId = new Guid("3241a142-031d-41e4-a1ba-239efc8559f7")
                        },
                        new
                        {
                            Id = new Guid("e9b68c31-2ac3-4b12-84d8-031fe146b10a"),
                            Name = "Sanskrit",
                            StandardId = new Guid("3241a142-031d-41e4-a1ba-239efc8559f7")
                        },
                        new
                        {
                            Id = new Guid("c345ea33-ceef-4362-89a2-ec572495a5f1"),
                            Name = "English",
                            StandardId = new Guid("1ecc5761-7ddb-4ef7-8b16-28c91845a386")
                        },
                        new
                        {
                            Id = new Guid("45caf56f-3a19-4ffd-b440-58efe9636348"),
                            Name = "Gujrati",
                            StandardId = new Guid("1ecc5761-7ddb-4ef7-8b16-28c91845a386")
                        },
                        new
                        {
                            Id = new Guid("eca06498-6177-4403-a63c-08dc40022339"),
                            Name = "Maths",
                            StandardId = new Guid("1ecc5761-7ddb-4ef7-8b16-28c91845a386")
                        },
                        new
                        {
                            Id = new Guid("cf6e4282-70c0-46d4-a37c-215c0dabaf2d"),
                            Name = "Science",
                            StandardId = new Guid("1ecc5761-7ddb-4ef7-8b16-28c91845a386")
                        },
                        new
                        {
                            Id = new Guid("2a0d243d-c7e6-4212-bed6-46a0688995a3"),
                            Name = "Social Science",
                            StandardId = new Guid("1ecc5761-7ddb-4ef7-8b16-28c91845a386")
                        },
                        new
                        {
                            Id = new Guid("fdca3b5e-ebf5-4a21-8652-8853e5374b52"),
                            Name = "Hindi",
                            StandardId = new Guid("1ecc5761-7ddb-4ef7-8b16-28c91845a386")
                        },
                        new
                        {
                            Id = new Guid("86fab670-b1d9-4060-92f5-abf844e7722e"),
                            Name = "Computer",
                            StandardId = new Guid("1ecc5761-7ddb-4ef7-8b16-28c91845a386")
                        },
                        new
                        {
                            Id = new Guid("bc5c3e5b-7d3d-46fa-9ebc-f98b3b63dfcc"),
                            Name = "English",
                            StandardId = new Guid("b880223f-458f-4e5f-a012-313119be3724")
                        },
                        new
                        {
                            Id = new Guid("1c932ef0-6e4e-4745-9887-b73148594b40"),
                            Name = "Gujrati",
                            StandardId = new Guid("b880223f-458f-4e5f-a012-313119be3724")
                        },
                        new
                        {
                            Id = new Guid("26b69dbf-af43-43ee-977f-2d083f905767"),
                            Name = "Maths",
                            StandardId = new Guid("b880223f-458f-4e5f-a012-313119be3724")
                        },
                        new
                        {
                            Id = new Guid("85d4c5ed-951e-4071-804a-3f18936ce1ae"),
                            Name = "Science",
                            StandardId = new Guid("b880223f-458f-4e5f-a012-313119be3724")
                        },
                        new
                        {
                            Id = new Guid("6e64fc17-847c-40cb-cfc0-08dc3dcf00a7"),
                            Name = "Social Science",
                            StandardId = new Guid("b880223f-458f-4e5f-a012-313119be3724")
                        },
                        new
                        {
                            Id = new Guid("3d2b8eb5-db35-4e5e-a834-a48cfdfbdef9"),
                            Name = "Computer",
                            StandardId = new Guid("b880223f-458f-4e5f-a012-313119be3724")
                        },
                        new
                        {
                            Id = new Guid("111a84aa-bf19-4cb5-970b-87fb6d69de6b"),
                            Name = "Sanskrit",
                            StandardId = new Guid("b880223f-458f-4e5f-a012-313119be3724")
                        });
                });

            modelBuilder.Entity("TestCoreApi.Models.TimeTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("NoOfDay")
                        .HasColumnType("int");

                    b.Property<Guid>("StandardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StandardId");

                    b.HasIndex("SubjectId");

                    b.ToTable("TimeTables");
                });

            modelBuilder.Entity("TestCoreApi.Models.AdminTeacher", b =>
                {
                    b.HasOne("TestCoreApi.Models.Standard", "Standards")
                        .WithMany("AdminTeachers")
                        .HasForeignKey("StandardId");

                    b.HasOne("TestCoreApi.Models.Subject", "Subjects")
                        .WithMany("AdminTeachers")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Standards");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("TestCoreApi.Models.Family", b =>
                {
                    b.HasOne("TestCoreApi.Models.Student", "Students")
                        .WithMany("Families")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Students");
                });

            modelBuilder.Entity("TestCoreApi.Models.Fees", b =>
                {
                    b.HasOne("TestCoreApi.Models.Student", "Student")
                        .WithMany("Fees")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("TestCoreApi.Models.Student", b =>
                {
                    b.HasOne("TestCoreApi.Models.Standard", "Standards")
                        .WithMany("Students")
                        .HasForeignKey("StandardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Standards");
                });

            modelBuilder.Entity("TestCoreApi.Models.Subject", b =>
                {
                    b.HasOne("TestCoreApi.Models.Standard", "Standards")
                        .WithMany("Subjects")
                        .HasForeignKey("StandardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Standards");
                });

            modelBuilder.Entity("TestCoreApi.Models.TimeTable", b =>
                {
                    b.HasOne("TestCoreApi.Models.Standard", "Standards")
                        .WithMany("TimeTables")
                        .HasForeignKey("StandardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestCoreApi.Models.Subject", "Subjects")
                        .WithMany("TimeTables")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Standards");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("TestCoreApi.Models.Standard", b =>
                {
                    b.Navigation("AdminTeachers");

                    b.Navigation("Students");

                    b.Navigation("Subjects");

                    b.Navigation("TimeTables");
                });

            modelBuilder.Entity("TestCoreApi.Models.Student", b =>
                {
                    b.Navigation("Families");

                    b.Navigation("Fees");
                });

            modelBuilder.Entity("TestCoreApi.Models.Subject", b =>
                {
                    b.Navigation("AdminTeachers");

                    b.Navigation("TimeTables");
                });
#pragma warning restore 612, 618
        }
    }
}
